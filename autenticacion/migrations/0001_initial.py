# Generated by Django 5.1 on 2024-09-14 22:28

import autenticacion.managers
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('nombre_usuario', models.CharField(max_length=30, unique=True, verbose_name='nombre_usuario')),
                ('email', models.EmailField(blank=True, max_length=254, null=True, unique=True, verbose_name='email address')),
                ('nombre_completo', models.CharField(blank=True, max_length=100, null=True, verbose_name='nombre_completo')),
                ('fecha_nacimiento', models.DateField(blank=True, null=True, verbose_name='fecha_nacimiento')),
                ('foto_perfil', models.CharField(blank=True, max_length=200, null=True, verbose_name='foto_perfil')),
                ('fecha_registro', models.DateTimeField(auto_now_add=True, verbose_name='fecha_registro')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, verbose_name='active')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
            },
            managers=[
                ('objects', autenticacion.managers.UserManager()),
            ],
        ),
    ]
